{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","message","nodeName","id","Promise","resolve","reject","addEventListener","printMessage","domNode","document","querySelector","insertAdjacentHTML","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAElBC,IAAAA,EAAoBD,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQG,SAAiBH,UAAAA,OAAAA,EAAQI,GAAxF,KAEO,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BP,EAAQQ,iBAAiBP,EAAW,WAClCK,EAAQJ,OAKd,IAAMO,EAAe,SAACP,GACdQ,IAAAA,EAAkCR,wBAAAA,OAAAA,EAAxC,UACaS,SAASC,cAAc,QAE/BC,mBAAmB,YAAaH,IAGvCI,OAAOC,QAAU,CACfhB,QAAAA,EACAU,aAAAA","file":"main.40cf6550.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  // eslint-disable-next-line max-len\n  const message = `It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.`;\n\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      resolve(message);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const domNode = `<div class=\"message\">${message}</div>`;\n  const body = document.querySelector('body');\n\n  body.insertAdjacentHTML('beforeend', domNode);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}